clear
close all
casotest=input('case test # (between 1 and 19)  ');
%%%%% case tests from #1 to #5 are taken by
% J.Zhao, X.Wang, An Algorithm to Searching for the Kernel of a 
% Simple Polygon, 2010 International Conference on Computer 
% Application and System  Modeling (ICCASM 2010), Taiyuan, 2010, 
% pp. V3-455-V3-457, doi:10.1109/ICCASM.2010.5620799.
% case tests from #6 to #9 are taken by
% https://github.com/gaganso/simple_polygon_kernel/blob/master/dll.py
% case tests from #10 to #13 are taken by
% https://github.com/filip256/PolygonKernel/blob/main/examples/
% case test #14 is taken by 
% S. Hong, H. Nagamochi,Convex drawings of graphs with non-convex 
% boundary constraints, Discrete Applied Mathematics,156, No. 12, (2008), 2368--2380
switch casotest
    case 1
       xvert=[20.4 5.6 24.7 30.2 67.4 59.9 63.6 43.5 41];
       yvert=[13.5 40.9 49.2 69.5 64.3 48.4 27.6 31.6 18.8];
    case 2
       xvert=[9.2 23.2 14.7 30.8 59.2 53.9 73.7 53.1 41.8 14.4];
       yvert=[22.2 32.1 48.4 64.4 55.9 33.3 22.3 12.5 21.8 7.2];
    case 3
        xvert=[41.2 18.6 20.4  7.1  4.1 17.4  38.3 61.9 61.9 44.8];
        yvert=[6    9.3  31.9 21.8 38.4 56.3 51   62.3 22.9 31.9];
    case 4
        xvert=[13.4 7.8 28.7  33.7 65.1 56.3 72.4 63.6 55.6 30 27.7 ];
        yvert=[30.2 41.5 47.5 61.6 52.5 39.2 37.2 10.3 17.9 7.3 26.1];
    case 5
        xvert=[7.7  17.  30.8 51.2  65.3 48.7 62. 41.4 22.6 15.];
        yvert=[39.9 59.7 43.2 62    41.6 43.7  26 10   26.3 6.5];
    case 6
        xvert=[1.774193548387097 6.1088709677419351 10.362903225806452 14.939516129032256 12.439516129032256 16.25 5.0604838709677411 8.0241935483870961];
       yvert=[ 3.9339826839826841 5.7196969696969706 4.0422077922077921 2.283549783549784 11.563852813852815 15.405844155844157 18.814935064935067 13.620129870129873];
    case 7
       xvert=[3.3266129032258061, 5.8870967741935489, 8.5887096774193559,11.25, 11.754032258064516, 15.7258064516129, 15.06048387096774,  18.004032258064516, 10.806451612903224, 3.689516129032258, 6.8145161290322571, 8.870967741935484, 9.4153225806451601, 3.991935483870968];
       yvert=[ 4.312770562770563, 9.3722943722943732, 5.7196969696969706, 2.2294372294372291, 8.425324675324676, 8.9935064935064943, 13.971861471861473 17.516233766233768, 19.410173160173162, 18.463203463203467, 16.677489177489178,  15.703463203463205, 12.943722943722944, 13.430735930735931];
     case 8
      xvert=[3.588709677419355, 6.4919354838709671, 13.608870967741936, 15.866935483870968, 16.693548387096772, 11.068548387096772,9.3951612903225801,  3.9516129032258061, 8.125, 2.520161290322581, 1.55241935483871, 1.028225806451613];
      yvert=[ 3.4199134199134198, 5.6926406926406923, 5.4220779220779232, 5.2326839826839837, 10.50865800865801, 11.212121212121213, 17.353896103896105, 18.354978354978357, 13.511904761904763, 10.535714285714286, 7.1807359307359313, 1.3365800865800868];
    case 9
         xvert=[3.245967741935484, 8.3266129032258078, 8.3266129032258078, 11.471774193548388,15.544354838709676, 19.254032258064516, 19.052419354838708, 18.608870967741936, 10.362903225806452, 5.1814516129032251, 4.05241935483871, 0.94758064516129004, 3.125, 2.0161290322580649];
         yvert=[3.5010822510822512, 2.337662337662338, 5.6114718614718626, 5.3138528138528152, 2.283549783549784, 4.258658008658009, 8.0735930735930737, 11.780303030303031, 12.754329004329005, 13.701298701298704, 18.030303030303031, 17.813852813852815, 13.863636363636367, 9.9404761904761916];
    case 10
        xvert=[500,407,275,318,381,264,94,235,396,241,86,290,436,433,453,547,593,639,737,713,678,781,871,741,844,958,865,771,844,902,795,724,744];
        yvert=[219,131,63,187,317,276,272,370,441,494,589,592,539,699,880,731,594,723,896,685,557,628,680,536,515,529,420,373,326,236,231,284,166];
    case 11
        xvert=[441   445   431   439   381   358   239   320   308   385 290   284   135   285   288   382   309   324   227   339 ...
           356   451   401   419   412   485   516   542   562   590 667   654   670   639   715   728   902   764   770   661 ...
           778   778   904   772   766   666   741   732   811   692 654   588   611   588   584   553   517   508   487   470];
        yvert=[39   110   121   219   145   164    90   198   221   299   265   295   317   362   380   392   452   484   563   520 ...
           533   471   566   575   706   597   605   508   610   604   725   584   572   480   528   509   580   455   427   389 ...
          369   342   304   291   269   270   210   193    92   155   136   232   122   121    26   115   109   218   109   108 ];
        yvert=-yvert; 
        % 
    case 12
        xvert=[ 456   358   362   491   677   729   763   621   456];
        yvert=[ 227   258   369   516   555   436   265   354   354];
    case 13
        xvert=[564   592   626   689   663   644   611   650   705   767   698   651   606   621   618   590   563   536   528   505 ...
           454   405   423   455   487   459   420   374   417   470   510   528   527   534   547   545   544 ];
        yvert=[577   614   636   650   617   577   546   554   541   491   488   468   471   429   371   295   362   409   448   422 ...
            409   389   471   508   516   531   542   547   578   582   570   597   634   686   669   632   600];
    case 14
      xvert=[ 79   123   115   157   171   127   126   163   121   113    93    58    54    12    56    25    79    ];
      yvert=[  0     0    43    24    37    75    92   150   127   153   117   148   117   112    73    33    34];  
     case 15
       xvert=[1.1298    3.7151    6.6484   15.7468   16.6417   10.9739   10.2281    7.0462 ];
       yvert=[1.3440    3.3327    6.0175    5.2220   10.5915   11.0390   14.7678   14.7181  ];
     case 16
        xvert=[0.0    0.3541    0.6805    0.6283    0.3495    0.1];
        yvert=[0.7967    0.6365    0.7967    0.1    0.3427    0.0994 ];
    case 17 
        xvert=[ 0.2681    0.3541    0.4423    0.5124    0.5826    0.6278    0.6278    0.8563    0.6482    0.4762    0.0826    0.3450];
        yvert=[  0.0668    0.2448    0.4110    0.2448    0.0638    0.2982    0.4288    0.4674    0.5950    0.7018    0.4674    0.4733];
    case 18
        xvert=[ 0.5170    0.5170    0.5170    0.8133    0.9333    0.9333    0.6618    0.5215    0.5215    0.3043    0.3292    0.1233];
        yvert=[ 0.0875    0.3220    0.4644    0.4644    0.4674    0.7136    0.7077    0.7166    0.9332    0.9362    0.4644    0.4763];
    case 19
        xvert=[10.9417   10.9417   10.9188   10.4162   10.1421    9.4567    9.1597    9.7766    9.0912   10.5533   10.7132   11.3757 ];
        yvert=[11.9803   12.5971   13.4424   11.9118   11.4092   11.6833   10.7467   10.3583   10.1527    8.9876    8.1194    7.2742];
    otherwise
        error('there is no test associated to this number')
end
area_components=xvert.*yvert([2:end,1]) - ...
                      xvert([2:end,1]).*yvert;
area= sign(sum((area_components)));
if area==-1    % the vertices are given clockwise. Therefore
    % we change the order to have the polygon with vertices
    % counterclockwise
xvert=xvert(end:-1:1);
yvert=yvert(end:-1:1);
end
n=length(xvert);
figure
plot([xvert xvert(1)], [yvert yvert(1)],'LineWidth',2)
hold on
plot(xvert,yvert,'ro')
for i=1:length(xvert)
text(xvert(i),yvert(i), num2str(i),'FontSize',14)
end
axis equal
[kernx,kerny,kernP,areak]=funkernel(xvert,yvert);
if ~isempty(kernx)
     plot(kernx,kerny,'mo','MarkerFaceColor','m')
     plot([kernx, kernx(1)], [kerny,kerny(1)],'m','LineWidth',2)
     patch([kernx, kernx(1)], [kerny,kerny(1)],'m')
     axis equal
 else
      title('kernel empty')
       axis equal
end
fprintf(1,'area of the kernel %12.7e \n',areak);
fprintf(1, 'number of vertices of the kernel %i \n', length(kernx))
axis off
